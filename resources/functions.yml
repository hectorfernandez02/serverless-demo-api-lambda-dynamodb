PlayersGetAll:
  handler: src/Controllers/PlayersGetAll.handler
  environment:
      NODE_ENV: ${opt:stage,'dev'}
      USER_NAME: ${file(keys.yml):USER_NAME}
      GENERAL_REGION: ${file(keys.yml):GENERAL_REGION}
  events:
      - http:
          path: /players
          method: get
          cors: true
PlayersGetById:
  handler: src/Controllers/PlayersGetById.handler
  environment:
      NODE_ENV: ${opt:stage,'dev'}
      USER_NAME: ${file(keys.yml):USER_NAME}
      GENERAL_REGION: ${file(keys.yml):GENERAL_REGION}
  events:
      - http:
          path: /players/{id}
          method: get
          cors: true
          request: 
            parameters: 
              paths: 
                id: true
PlayersCreate:
  handler: src/Controllers/PlayersCreate.handler
  environment:
      NODE_ENV: ${opt:stage,'dev'}
      USER_NAME: ${file(keys.yml):USER_NAME}
      GENERAL_REGION: ${file(keys.yml):GENERAL_REGION}
  events:
      - http:
          path: /players
          method: post
          cors: true
          request: 
            schemas: 
              application/json: ${file(src/Schemas/PlayerCreateSchema.json)}
PlayersUpdate:
  handler: src/Controllers/PlayersUpdate.handler
  environment:
      NODE_ENV: ${opt:stage,'dev'}
      USER_NAME: ${file(keys.yml):USER_NAME}
      GENERAL_REGION: ${file(keys.yml):GENERAL_REGION}
  events:
      - http:
          path: /players
          method: put
          cors: true
          request: 
            schemas: 
              application/json: ${file(src/Schemas/PlayerUpdateSchema.json)}
PlayersDelete:
  handler: src/Controllers/PlayersDelete.handler
  environment:
      NODE_ENV: ${opt:stage,'dev'}
      USER_NAME: ${file(keys.yml):USER_NAME}
      GENERAL_REGION: ${file(keys.yml):GENERAL_REGION}
  events:
      - http:
          path: /players/{id}
          method: delete
          cors: true
          request: 
            parameters: 
              paths: 
                id: true